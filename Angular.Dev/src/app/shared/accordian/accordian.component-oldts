import { AfterViewChecked, ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from "@angular/core";

@Component({
    selector: 'accordian',
    templateUrl: './accordian.component.html',
    styleUrl: './accordian.css'
})
export default class Accordian implements AfterViewChecked {
    @Input() data!: any;
    @Output() demoOutputEvent = new EventEmitter<string>();
    handleEvent($event: any) {
        const element = $event.target;
        const parent = element.closest("#accordian");
        const childLi = parent.querySelectorAll("li");
        childLi.forEach((v: any) => {
            v.classList.remove("active");
        });
        element.parentElement.classList.add("active");
    }      
    handleOutput(value: string) {
        this.demoOutputEvent.emit(value);
    }
    trackByUserId(index: number, item: any): string {
        return item.title;
    }
    ngOnChanges(): void {console.log("Accordian : Onchanges Class : ngOnChanges LC Method");}
    ngOnInit(): void {console.log("Accordian : OnInit Class : ngOnInit LC Method");}
    ngDoCheck(): void {console.log("Accordian : DoCheck Class : ngDoCheck LC Method");}
    ngAfterContentInit(): void {console.log("Accordian : AfterContentInit Class : ngAfterContentInit LC Method");}
    ngAfterContentChecked(): void {console.log("Accordian : AfterContentChecked Class : ngAfterContentChecked LC Method");}
    ngAfterViewInit(): void {document.getElementById("accordian")?.firstElementChild?.classList.add("active");console.log("Accordian : AfterViewInit Class : ngAfterViewInit LC Method");}
    ngAfterViewChecked(): void {console.log("Accordian : AfterViewChecked Class : ngAfterViewChecked LC Method");}
    ngOnDestroy(): void {console.log("Accordian : OnDestroy Class : ngOnDestroy LC Method");}
}